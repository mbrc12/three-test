{"version":3,"sources":["cjs1/main.cljs"],"mappings":";;AAKA,AAAA,AAAMA;AAAN,AAEE,AAAMC,AAAK,AAAAC;AACLC,AAAK,AAAAC,AAAsB,AAAA;AAC3BC,AAAK,AAAAC,AAASL,AAAKE;AAFzB,AAGEE;;AAEJ,AAAA,AAAME,AACHC;AADH,AAEE,AAAMC,AAAWD;;AAEnB,AAAA,AAAME;AAAN,AAEE,AAAMC,AAAK,AAAGC;AAGRC,AAAM,AAAGC;AACTC,AAAO,AAAGD;AACVE,AAAM,AAAAC;AACNC,AAAO,AAAAC,AAAA,AAAA,AAAA,AAAyB,AAAGN,AAAME;AACzCK,AAAS,AAAAC;AACTC,AAAM,AAACtB;AACPuB,AAAS;AAAA,AAEE,AAAwBT,AAAUS;;AAClC,AAASH,AAASJ,AAAME;;AAZzC,AAaE,AAAUE,AAASP,AAAME;;AACzB,AAAcJ,AAAK,AAAGS;;AACtB,AAACb,AAAI,AAAKe;;AACV,AAAMN,AAAMM;;AACZ,AAAA,AAAM,AAAA,AAAIJ;;AACV,AAACK","names":["cjs1.main/cube","geom","js/module$node_modules$three$three.BoxGeometry","matr","js/module$node_modules$three$three.MeshBasicMaterial","cube","js/module$node_modules$three$three.Mesh","cjs1.main/log","wtf","js/console","cjs1.main/main","body","js/document","WIDTH","js/window","HEIGHT","scene","js/module$node_modules$three$three.Scene","camera","js/module$node_modules$three$three.PerspectiveCamera","renderer","js/module$node_modules$three$three.WebGLRenderer","cube-","animator"],"sourcesContent":["(ns cjs1.main\n  (:require [cjs1.util :as u]\n            [\"three\" :as t]\n            [applied-science.js-interop :as j]))\n\n(defn cube\n  []\n  (let [geom (t/BoxGeometry.)\n        matr (t/MeshBasicMaterial. (j/obj :color 0x00ff00))\n        cube (t/Mesh. geom matr)]\n    cube))\n\n(defn log\n  [wtf]\n  (.log js/console wtf))\n\n(defn main\n  []\n  (let [body (. js/document -body)\n        ; WIDTH (/ js/window.innerWidth 2)\n        ; HEIGHT (/ js/window.innerHeight 2)\n        WIDTH (. js/window -innerWidth)\n        HEIGHT (. js/window -innerHeight)\n        scene (t/Scene.)\n        camera (t/PerspectiveCamera. 75 (/ WIDTH HEIGHT) 0.1 1000)\n        renderer (t/WebGLRenderer.)\n        cube- (cube)\n        animator (fn animator []\n                   ; (log (.getTime (js/Date.)))\n                   (.requestAnimationFrame js/window animator)\n                   (.render renderer scene camera))]\n    (.setSize renderer WIDTH HEIGHT)\n    (.appendChild body (. renderer -domElement))\n    (log (str cube-))\n    (.add scene cube-)\n    (set! (.. camera -position -z) 5)\n    (animator)\n    ))\n\n"]}